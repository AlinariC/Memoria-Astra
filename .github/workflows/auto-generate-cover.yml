name: Auto-Generate Cover if Missing

on:
  push:
    branches:
      - main
    paths:
      - "**/Manuscript.md"
  pull_request:
    branches:
      - main
    paths:
      - "**/Manuscript.md"
  workflow_dispatch:

jobs:
  generate-cover:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Find Changed Manuscript Path
      id: find_manuscript
      run: |
        echo "Looking for changed Manuscript.md..."
        if [ -f "$GITHUB_EVENT_PATH" ]; then
          MANUSCRIPT_PATH=$(jq -r '.head_commit.modified[]?' "$GITHUB_EVENT_PATH" | grep 'Manuscript.md' | head -n 1)
          if [ -z "$MANUSCRIPT_PATH" ]; then
            echo "No Manuscript.md modified. Skipping."
            exit 0
          fi
          echo "Found Manuscript: $MANUSCRIPT_PATH"
          echo "MANUSCRIPT_PATH=$MANUSCRIPT_PATH" >> $GITHUB_ENV
          MANUSCRIPT_DIR=$(dirname "$MANUSCRIPT_PATH")
          echo "MANUSCRIPT_DIR=$MANUSCRIPT_DIR" >> $GITHUB_ENV
        else
          echo "No event payload found."
          exit 1
        fi

    - name: Check if cover.png is missing
      id: cover_check
      run: |
        if [ ! -f "$MANUSCRIPT_DIR/cover.png" ]; then
          echo "needs-cover=true" >> $GITHUB_ENV
        else
          echo "needs-cover=false" >> $GITHUB_ENV
        fi

    - name: Install curl and jq
      if: env.needs-cover == 'true'
      run: |
        sudo apt-get update
        sudo apt-get install -y curl jq

    - name: Install yq
      if: env.needs-cover == 'true'
      run: |
        sudo apt-get update
        sudo apt-get install -y yq

    - name: Extract Title, Subtitle, Author from Manuscript
      if: env.needs-cover == 'true'
      id: metadata
      run: |
        TITLE=$(yq '.title' "$MANUSCRIPT_DIR/Manuscript.md")
        SUBTITLE=$(yq '.subtitle' "$MANUSCRIPT_DIR/Manuscript.md")
        AUTHOR=$(yq '.author' "$MANUSCRIPT_DIR/Manuscript.md")

        echo "TITLE=$TITLE" >> $GITHUB_ENV
        echo "SUBTITLE=$SUBTITLE" >> $GITHUB_ENV
        echo "AUTHOR=$AUTHOR" >> $GITHUB_ENV

    - name: Request Cover Art from OpenAI
      if: env.needs-cover == 'true'
      run: |
        curl https://api.openai.com/v1/images/generations \
        -H "Content-Type: application/json" \
        -H "Authorization: Bearer ${{ secrets.OPENAI_API_KEY }}" \
        -d '{
          "model": "gpt-image-1",
          "prompt": "Create a stunning science fiction/fantasy book cover for a novel titled \"'"${TITLE}"'\" with subtitle \"'"${SUBTITLE}"'\" by author \"'"${AUTHOR}"'\". No text overlay. Vibrant cosmic themes.",
          "n": 1,
          "size": "1024x1536"
        }' > response.json

    - name: Download generated image
      if: env.needs-cover == 'true'
      run: |
        URL=$(jq -r '.data[0].url' response.json)
        curl -o "$MANUSCRIPT_DIR/cover.png" "$URL"

    - name: Commit generated cover
      if: env.needs-cover == 'true'
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git add "$MANUSCRIPT_DIR/cover.png"
        git commit -m "Auto-generated cover.png for ${TITLE}"
        git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git HEAD:main
